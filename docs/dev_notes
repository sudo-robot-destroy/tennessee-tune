To start the betaflight sitl run (from betaflight directory) 
./obj/main/betaflight_SITL.elf
If there is an error (Segmentation fault), delete eeprom.bin file in the betaflight directory
rm eeprom.bin

pyserial comes with miniterm that lets you connect to serial connections. This connects to the port: 
python -m serial.tools.miniterm socket://127.0.0.1:5761 115200
Hitting # lets you enter the betaflight Cli, "feature RX_MSP" should enable msp commands. 

To start gazebo, run the following for the Desktop directory: 
gazebo --verbose ./iris_arducopter_demo.world

I rebuilt betaflight like this 
make TARGET=SITL OPTIONS=USE_MSP_UART

Also, I notices in iris_arducopter_demo.world there was a note that said I needed $ git clone https://github.com/hsu/ardupilot.git -b gazebo_sitl (not the normal ardupilot I had). 
There are some other notes in there about path. 

Now I'm able to fly the quad using the configurators motor controls at least thats some progress. 
I tried on a new day just starting the elf, then gazebo, then the configuartor and flying, but it didn't work. 
I disconnected the configurator, connected to cli through miniterm, enabled RX_MSP, exited miniterm, 
this caused elf to crash, restarted elf (after deleting eeprom), then configurator, then it flew from configurator. 

It seems like I have to move the motors in the motors tab before I can use the virtual control sticks. Also sometimes I have to redo the feature RX_MSP command, althought that might just be the restart fixing it. Confirmed that it is only a restart that is needed not the RX_MSP command!

Also confirmed that msp_commander.py is able to receive information from the elf by binding to 2nd msp port and polling ATTITUDE while I flew over port 1 with virtual sticks in configurator. 

I've also confirmed that my simulator is able to communitcate with the elf because when I push the motor sliders up in the configurator I can see the values rise on my simulator's console output (the numbers go from 0 to 1. 

***For opening a serial port like I'm doing you have to do this
self.ser = serial.serial_for_url(serPort, do_not_open = True)
instead of just this
self.ser = serial.Serial()
Not sure if that is worth a git push

